#!/bin/bash
#
# wrapper script for voria's excellent NC10 scripts
# see http://www.voria.org/forum/ for details
#
# Original Author: Stuart Herbert (stuart@stuartherbert.com)
# Released into the public domain

SCRIPTS_DIR="/usr/lib/samsung-scripts"

# Load configuration
if [ -f /etc/default/samsung-scripts ]; then
	. /etc/default/samsung-scripts
else
	# Set default values
	IGNORE_GOVERNORS="userspace conservative"
	WIRELESS_TOGGLE_METHOD=0
	WIRELESS_MODULE="ath5k" 
	LAST_STATUS_RESTORE=false
	BLUETOOTH_STATUS=""
	WEBCAM_STATUS=""
	WIRELESS_STATUS=""
fi

determineLocale ()
{
	export LOCALE="$LANG"
}

determinePopup ()
{
	if [ -t 0 ]; then
		export USE_POPUP=0
	else
		export USE_POPUP=1
	fi
}

determineSudoUser ()
{
	# If $SUDO_USER is not specified, defaults to current user.
	if [ -z $SUDO_USER ]; then
		export SUDO_USER=$USER
	fi
}

setNotifyHelperTempFiles ()
{
	# notify_helper.py temp files
	NH_PID="/tmp/notify_helper-pid-$SUDO_USER"
	NH_ICON="/tmp/notify_helper-icon-$SUDO_USER"
	NH_URGENCY="/tmp/notify_helper-urgency-$SUDO_USER"
	NH_TITLE="/tmp/notify_helper-title-$SUDO_USER"
	NH_MESSAGE="/tmp/notify_helper-message-$SUDO_USER"
}

mustBeRoot ()
{
	if [[ `id -u` != 0 ]] ; then
		showPopup stop critical "Access Denied" "You must be root to perform this operation."
		exit 1
	fi
}

listOptions ()
{
	echo "samsung-scripts - Utilities for your Samsung netbook"
	echo 
	echo "samsung-scripts status - show status for all devices"
	# list all of the available scripts, and their help messages
	for x in `echo $SCRIPTS_DIR/*.sh` ; do
		echo -n "samsung-scripts `basename $x .sh` "
		runScript `basename $x .sh` summary
	done
}

runScript ()
{
	if [[ ! -x ${SCRIPTS_DIR}/$1.sh ]]; then
		echo "Error: operation $1 not supported"
		exit 1
	fi

	scriptToRun=$1
	shift

	. ${SCRIPTS_DIR}/${scriptToRun}.sh "$@"
}

showHelp ()
{
	echo -n "$0 $1 "
	# the showSummary function is provided by the script we are running
	showSummary
}

# showPopup()
#
# $1 - icon to show
# $2 - severity
# $3 - title
# $4 - message
showPopup ()
{
	if [[ $SUDO_USER != "" ]]; then
		if [[ $USE_POPUP = 1 ]]; then
			sudo -u $SUDO_USER -- kdialog --title "$3" --passivepopup "$4" 3
		else
			echo "$3 - $4"
		fi
	fi
}

main ()
{
	# figure out our environment
	# this is also used by the scripts in $SCRIPT_DIR

	determineLocale
	determinePopup
	determineSudoUser
	setNotifyHelperTempFiles

	# has the user asked us what they want to do?
	if [[ -z $1 ]] ; then
		# no, so tell them what the options are
		listOptions
		exit 0
	fi

	# if we get here, we have a command to run
	scriptToRun="$1"
	if [ $scriptToRun = "status" ]; then
		for x in `echo $SCRIPTS_DIR/*.sh` ; do
				runScript `basename $x .sh` status
		done
	else
		shift
		runScript $scriptToRun "$@"
	fi
}

main "$@"
